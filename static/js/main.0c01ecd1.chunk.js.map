{"version":3,"sources":["images sync /^/.//.*/.jpg$","images/1.jpg","images/2.jpg","images/3.jpg","images/4.jpg","images/5.jpg","images/6.jpg","images/7.jpg","images/8.jpg","images/9.jpg","components/Image/index.js","components/Score/index.js","components/Memory/index.js","App.js","serviceWorker.js","index.js"],"names":["map","./1.jpg","./2.jpg","./3.jpg","./4.jpg","./5.jpg","./6.jpg","./7.jpg","./8.jpg","./9.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","Image","props","react_default","a","createElement","style","width","onClick","alt","name","src","image","Score","score","topScore","Memory","state","order","selected","componentDidMount","_order","_this","shuffle","setState","imageClickHandler","event","_state","_name","target","includes","push","array","_array","n","length","i","r","Math","floor","random","temp","_this2","this","components_Score","display","flex","flexDirection","flexWrap","components_Image","key","require","concat","React","Component","App","components_Memory","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c01ecd1.chunk.js","sourcesContent":["var map = {\n\t\"./1.jpg\": 16,\n\t\"./2.jpg\": 17,\n\t\"./3.jpg\": 18,\n\t\"./4.jpg\": 19,\n\t\"./5.jpg\": 20,\n\t\"./6.jpg\": 21,\n\t\"./7.jpg\": 22,\n\t\"./8.jpg\": 23,\n\t\"./9.jpg\": 24\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;","module.exports = __webpack_public_path__ + \"static/media/1.90af1a46.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.a33fb126.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.05704fbd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.abca8d63.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.3ee2dde4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.0b9da4ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.42c231fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.22e785de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.5087e001.jpg\";","import React from \"react\";\n\nfunction Image(props) {\n  const style = {\n    width: \"180px\"\n  }\n  return (\n    <div>\n      <img \n        style={style}\n        onClick={props.onClick}\n        alt={props.name}\n        src={props.image}\n      />\n    </div>\n  );\n}\n\nexport default Image;\n","import React from \"react\";\n\nfunction Score(props) {\n  return (\n    <div>\n      <h2>Score: {props.score} chihuahuas | Top Score: {props.topScore} chihuahuas</h2>\n    </div>\n  );\n}\n\nexport default Score;\n","import React from \"react\";\nimport Image from \"../Image\";\nimport Score from \"../Score\"\n\nclass Memory extends React.Component {\n  state = {\n    order: [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],\n    selected: [],\n    score: 0,\n    topScore: 0\n  };\n  componentDidMount = () => {\n    let _order = this.shuffle(this.state.order);\n    this.setState({\n      order: _order\n    })\n  }\n  shuffle(array) {\n    let _array = array;\n    let n = _array.length;\n    for (let i = 0; i < n; i++) {\n      let r = Math.floor(Math.random() * Math.floor(n));\n      let temp = _array[i];\n      _array[i] = _array[r];\n      _array[r] = temp;\n    }\n    return _array;\n  }\n  imageClickHandler = event => {\n    let _state = this.state;\n    let _name = event.target.alt;\n    if (_state.topScore < _state.score) {\n      _state.topScore = _state.score\n    }\n    if (_state.selected.includes(_name) || _state.score === 9) {\n      _state.score = 0;\n      _state.selected = [];\n    } else {\n      _state.selected.push(_name);\n      _state.score++;\n    }\n    _state.order = this.shuffle(_state.order);\n    this.setState(_state);\n  };\n  render() {\n    const style = {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"600px\"\n    }\n    return (\n      <div>\n        <h1>Chihuahua Memory Game</h1>\n        <ol>\n          <li>Click on a chihuahua</li>\n          <li>Then click on a different chihuahua</li>\n          <li>Game resets if you click on the same chihuahua</li>\n          <li>Try to get a Top Score of 9 chihuahuas</li>\n        </ol>\n        <Score score={this.state.score} topScore={this.state.topScore}/>\n        <div style={style}>\n          {this.state.order.map(id => {\n            return <Image \n              key={id}\n              onClick={this.imageClickHandler}\n              name={id}\n              image={require(`../../images/${id}.jpg`)}\n            />\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Memory;\n","import React from 'react';\nimport Memory from \"./components/Memory\";\n\nfunction App() {\n  return (\n    <Memory />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}